name: facebookresearch/nevergrad/all_ci
on:
  push:
    branches:
    - main
env:
  PYPI_PASSWORD: xxxxl0v4
jobs:
  install:
    if: # GitHub does not currently support regular expressions inside if conditions
#         github.ref == 'refs/tags//(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(\.post(0|[1-9][0-9]*))?/'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    - uses: actions/checkout@v4.1.0
    - name: restore_cache
      uses: actions/cache@v3.3.2
      with:
        key: v4-dependencies-main-{{ checksum "requirements/main.txt"}}
        path: "./venv"
        restore-keys: v4-dependencies-main-{{ checksum "requirements/main.txt"}}
    - name: "[no-extra] Install dependencies"
      run: |
        rm -rf venv && python3 -m venv venv
        . venv/bin/activate
        pip install --progress-bar off pip==23.2
        pip install --progress-bar off -e .
    - name: "[no-extra] Print installation"
      run: |
        if [[ -z "$CIRCLE_REPOSITORY_URL" ]]; then
            echo "CIRCLE_REPOSITORY_URL must be provided in environment" 1>&2
            exit 1
        fi
        echo "This is on $CIRCLE_REPOSITORY_URL."
        . venv/bin/activate
        pip freeze
      if: always()
    - name: "[no-extra] Run basic tests (checking dependencies)"
      run: |
        . venv/bin/activate
        python -m nevergrad.optimization.requirements_check  # calls a bit of everything
    - uses: "./.github/actions/ubuntu_restore_all"
    - name: save_cache
      uses: actions/cache@v3.3.2
      with:
        path: "./venv"
        key: v4-dependencies-{{ checksum "requirements/dev.txt" }}-{{ checksum "requirements/main.txt"}}-{{ checksum "requirements/bench.txt"}}
    - name: "[all] Print installation"
      run: |
        . venv/bin/activate
        pip freeze
      if: always()
    - name: Run wheel and check package
      run: |
        . venv/bin/activate
        rm -rf dist  # make sure it's clean
        echo "Creating sdist"
        python setup.py sdist
        echo "Created sdist, now creating wheel"
        python setup.py bdist_wheel
        echo "Created wheel"
        mkdir nevergrad-build
        mv dist nevergrad-build/
        #
        python -c "from pathlib import Path;files = Path('nevergrad.egg-info/SOURCES.txt').read_text().split(); assert 'LICENSE' in files"
        python3 -m venv test_wheel
        . test_wheel/bin/activate
        pip install -U pip
        cd ..  # don't use nevergrad locally
        echo "Installing wheel"
        pip install --progress-bar off repo/nevergrad-build/dist/nevergrad-*any.whl
        #pip install --progress-bar off --use-deprecated=legacy-resolver repo/nevergrad-build/dist/nevergrad-*any.whl
        echo "Installed wheel"
        python -c "from nevergrad import functions;f = functions.ArtificialFunction(name='sphere', block_dimension=2);f([2, 3])"
      if: always()
    - uses: actions/upload-artifact@v4.0.0
      with:
        path: nevergrad-build/dist
    - name: Build docs
      run: |
        . venv/bin/activate
        cd docs/
        make html
    - uses: actions/upload-artifact@v4.0.0
      with:
        path: docs/_build/html
  static:
    if: # GitHub does not currently support regular expressions inside if conditions
#         github.ref == 'refs/tags//(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(\.post(0|[1-9][0-9]*))?/'
    runs-on: ubuntu-latest
    container:
      image: python:3.9
    steps:
    - uses: actions/checkout@v4.1.0
    - uses: "./.github/actions/ubuntu_restore_all"
    - name: Run mypy
      run: |
        . venv/bin/activate
        mypy --version
        mypy nevergrad
      if: always()
    - name: Run basic pylint
      run: |
        . venv/bin/activate
        pylint --version
        pylint nevergrad --disable=all --enable=unused-import,unused-argument,unused-variable,undefined-loop-variable,redefined-builtin,used-before-assignment,super-init-not-called,useless-super-delegation,dangerous-default-value,unnecessary-pass,attribute-defined-outside-init
      if: always()
    - name: Run black
      run: |
        . venv/bin/activate
        black --version
        black nevergrad --check --diff
      if: always()
  pytests:
    if: # GitHub does not currently support regular expressions inside if conditions
#         github.ref == 'refs/tags//(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(\.post(0|[1-9][0-9]*))?/'
    runs-on: ubuntu-latest
    container:
      image: python:3.9
    steps:
    - uses: actions/checkout@v4.1.0
    - uses: "./.github/actions/ubuntu_restore_all"
    - name: "[all] Run pytest"
      run: |
        . venv/bin/activate
        pytest --circleci-parallelize nevergrad -v --durations=20 --cov=nevergrad
        #pytest nevergrad -v --exitfirst --durations=20 --cov=nevergrad
      if: always()
  docs-deploy:
    if: # GitHub does not currently support regular expressions inside if conditions
#         github.ref == 'refs/heads/main' || github.ref == 'refs/tags//(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(\.post(0|[1-9][0-9]*))?/'
    runs-on: ubuntu-latest
    container:
      image: node:8.10.0
    needs:
    - install
    steps:
    - uses: actions/checkout@v4.1.0
    # Ensure parameter if_key_exists is set correctly
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2.6.1
      with:
        key: "${{ secrets.CIRCLE_CI_SSH_KEY }}"
        name: circle_ci_id_rsa
        known_hosts: "${{ secrets.CIRCLE_CI_KNOWN_HOSTS }}"
        if_key_exists: fail
    - uses: actions/download-artifact@v4.1.0
      with:
        path: docs/_build
    - name: Install and configure dependencies
      run: |
        npm install -g --silent gh-pages@2.0.1
        git config user.email "ci-build"
        git config user.name "ci-build"
    - name: Deploy docs to gh-pages branch
      run: |
        echo "This is on $CIRCLE_REPOSITORY_URL."
        if [[ "$CIRCLE_REPOSITORY_URL" == *":facebookresearch/"* ]]; then
          echo "Deploying"
          gh-pages --dotfiles --message "[skip ci] Updates" --dist docs/_build/html
        fi
  docs-links:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs:
    - install
    steps:
    - uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    - uses: actions/checkout@v4.1.0
    - uses: "./.github/actions/ubuntu_restore_all"
    - name: Check links
      run: |
        . venv/bin/activate
        cd docs/
        make linkcheck
      if: always()
  pypi-deploy:
    if: # GitHub does not currently support regular expressions inside if conditions
#         (github.ref == 'refs/tags//(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(\.post(0|[1-9][0-9]*))?/') && (github.ref != 'refs/heads//.*/')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    - uses: actions/checkout@v4.1.0
    - uses: "./.github/actions/ubuntu_restore_all"
    - uses: actions/download-artifact@v4.1.0
      with:
        path: nevergrad-build
    - name: Create .pypirc
      run: |
        echo -e "[pypi]" >> ~/.pypirc
        echo -e "username = __token__" >> ~/.pypirc
        echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
    - name: Verify tag
      run: python setup.py verify_circleci_version
    - name: upload to pypi
      run: |
        echo "This is on $CIRCLE_REPOSITORY_URL."
        if [[ "$CIRCLE_REPOSITORY_URL" == *":facebookresearch/"* ]]; then
          echo "Deploying"
          . venv/bin/activate
          du -h nevergrad-build/dist/*
          twine check nevergrad-build/dist/nevergrad-*
          twine upload nevergrad-build/dist/nevergrad-* --verbose
        fi
